name: Release

on:
  release:
    types: [published]

permissions:
  contents: read
  id-token: write

env:
  CI: true

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18]

    steps:
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8.6.7
          run_install: false

      - uses: actions/checkout@v4

      - run: pnpm install --no-frozen-lockfile
        shell: bash

      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: pnpm install

      - name: Determine release type and channel
        id: determine-release
        run: |
          TAG_NAME=${{ github.event.release.tag_name }}
          if [[ "${TAG_NAME}" == illustrations-v*.*.* ]]; then
            echo "RELEASE_CHANNEL=$(pnpm run illustrations-release-channel --silent)" >> $GITHUB_ENV
            echo "RELEASE_TYPE=illustrations" >> $GITHUB_ENV
          elif [[ "${TAG_NAME}" == icons-v*.*.* ]]; then
            echo "RELEASE_CHANNEL=$(pnpm run icons-release-channel --silent)" >> $GITHUB_ENV
            echo "RELEASE_TYPE=icons" >> $GITHUB_ENV
          else
            echo "Unrecognized tag format."
            exit 1
          fi

      - name: Build illustrations
        if: env.RELEASE_TYPE == 'illustrations'
        run: pnpm run build-illustrations

      - name: Build icons
        if: env.RELEASE_TYPE == 'icons'
        run: pnpm run build-icons

      - name: Publish `@registroponto/illustrations`
        if: env.RELEASE_TYPE == 'illustrations'
        run: pnpm publish ./rp-illustrations --provenance --tag ${{ env.RELEASE_CHANNEL }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish `@registroponto/icons`
        if: env.RELEASE_TYPE == 'icons'
        run: pnpm publish ./rp-icons --provenance --tag ${{ env.RELEASE_CHANNEL }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
